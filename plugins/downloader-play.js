import fetch from "node-fetch";
import yts from "yt-search";

const ytIdRegex = /(?:youtube\.com\/(?:watch\?v=|embed\/|v\/|shorts\/)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;

const toSansSerifPlain = (text = "") =>
  text.split("").map((char) => {
    const map = {
      a: "ùñ∫", b: "ùñª", c: "ùñº", d: "ùñΩ", e: "ùñæ", f: "ùñø", g: "ùóÄ", h: "ùóÅ", i: "ùóÇ",
      j: "ùóÉ", k: "ùóÑ", l: "ùóÖ", m: "ùóÜ", n: "ùóá", o: "ùóà", p: "ùóâ", q: "ùóä", r: "ùóã",
      s: "ùóå", t: "ùóç", u: "ùóé", v: "ùóè", w: "ùóê", x: "ùóë", y: "ùóí", z: "ùóì",
      A: "ùñ†", B: "ùñ°", C: "ùñ¢", D: "ùñ£", E: "ùñ§", F: "ùñ•", G: "ùñ¶", H: "ùñß", I: "ùñ®",
      J: "ùñ©", K: "ùñ™", L: "ùñ´", M: "ùñ¨", N: "ùñ≠", O: "ùñÆ", P: "ùñØ", Q: "ùñ∞", R: "ùñ±",
      S: "ùñ≤", T: "ùñ≥", U: "ùñ¥", V: "ùñµ", W: "ùñ∂", X: "ùñ∑", Y: "ùñ∏", Z: "ùñπ",
      0: "ùü¢", 1: "ùü£", 2: "ùü§", 3: "ùü•", 4: "ùü¶", 5: "ùüß", 6: "ùü®", 7: "ùü©", 8: "ùü™", 9: "ùü´"
    };
    return map[char] || char;
  }).join("");

const formatViews = (views) => {
  if (!views) return "Desconocido";
  if (views >= 1_000_000_000) return `${(views / 1_000_000_000).toFixed(1)}B`;
  if (views >= 1_000_000) return `${(views / 1_000_000).toFixed(1)}M`;
  if (views >= 1_000) return `${(views / 1_000).toFixed(1)}k`;
  return views.toString();
};

const handler = async (m, { conn, text }) => {
  if (!text) return m.reply(toSansSerifPlain("‚ú¶ Ingresa el nombre o link de un video."));

  // Reacci√≥n mientras busca el video
  try {
    await conn.sendMessage(m.chat, { react: { text: "üïê", key: m.key } });

    let video;
    const ytId = ytIdRegex.exec(text);
    const search = ytId ? await yts({ videoId: ytId[1] }) : await yts(text);
    video = ytId ? search.video : search.all[0];

    if (!video) throw new Error("No se encontr√≥ el video.");

    const { title, timestamp, views, url, thumbnail, author, ago } = video;

    const caption = [
      "‚úß‚îÄ‚îÄ‚îÄ ÔΩ• ÔΩ°Ôæü‚òÖ: *.‚ú¶ .* :‚òÖ. ‚îÄ‚îÄ‚îÄ‚úß",
      "‚ßº ·∞î·©ö ‚ßΩ  M U S I C  -  Y O U T U B E",
      "",
      `¬ª ‚úß ¬´ *${title}*`,
      `> ‚û© Canal ‚Ä∫ *${author.name}*`,
      `> ‚û© Duraci√≥n ‚Ä∫ *${timestamp}*`,
      `> ‚û© Vistas ‚Ä∫ *${formatViews(views)}*`,
      `> ‚û© Publicado ‚Ä∫ *${ago || "desconocido"}*`,
      `> ‚û© Link ‚Ä∫ *${url}*`,
      "",
      "> ‚ú∞ Responde con *Audio* o *Video* para descargar ‚úß"
    ].join("\n");

    await conn.sendMessage(m.chat, { image: { url: thumbnail }, caption }, { quoted: m });

  } catch (err) {
    console.error("Error en .play:", err);
    await m.reply(toSansSerifPlain(`‚ùå Ocurri√≥ un error al ejecutar .play:\n${err.message}`));
  }
};

handler.command = ["play", "pla"];
handler.register = true;
export default handler;